{"ast":null,"code":"var _jsxFileName = \"/Users/akash/Desktop/untitled folder/my_component/frontend/src/Graphtry.js\";\nimport React, { Component } from 'react';\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\n\nclass Graphtry extends StreamlitComponentBase {\n  render() {\n    const jsonFileData = this.props.args[\"jsonFile\"];\n    var response = jsonFileData;\n    console.log(response.response);\n\n    const getNodes = async () => {\n      try {\n        if (response.flag == 1) {\n          console.log(\"Nodes from flask :\", response);\n          console.log(response.response);\n\n          const _edges = response.data[\"response\"].map(edge => {\n            return {\n              \"id\": `${edge[\"PARENT_ROLE\"]}_${edge[\"CHILD_ROLE\"]}`,\n              \"source\": edge[\"PARENT_ROLE\"],\n              \"target\": edge[\"CHILD_ROLE\"],\n              \"label\": `${edge[\"PARENT_ROLE\"]}_${edge[\"CHILD_ROLE\"]}`\n            };\n          }); //   dispatch(setEdges(_edges));\n          // setEdges(_edges)\n\n\n          const _nodes = response.data[\"response\"].map(edge => {\n            return {\n              \"id\": edge[\"CHILD_ROLE\"],\n              \"label\": edge[\"CHILD_ROLE\"],\n              \"level\": edge[\"LEVEL\"]\n            };\n          }); // loop through _nodes and check for duplicates and if there are duplicates keep the duplicate with the highest level\n\n\n          const _nodes_unique = _nodes.reduce((acc, curr) => {\n            if (!acc.some(node => node.id === curr.id)) {\n              acc.push(curr);\n            } else {\n              const index = acc.findIndex(node => node.id === curr.id);\n\n              if (acc[index].level < curr.level) {\n                acc[index] = curr;\n              }\n            }\n\n            return acc;\n          }, []);\n\n          console.log(_nodes);\n          console.log(_nodes_unique); //   dispatch(setNodes(_nodes_unique));\n        } else {\n          alert(\"Request failed for rbac_hierarchy\");\n          console.log(response.data);\n        }\n      } catch (error) {\n        console.log(error);\n        alert(\"error in rbac_hierarchy\");\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default withStreamlitConnection(Graphtry);","map":{"version":3,"names":["React","Component","Streamlit","StreamlitComponentBase","withStreamlitConnection","Graphtry","render","jsonFileData","props","args","response","console","log","getNodes","flag","_edges","data","map","edge","_nodes","_nodes_unique","reduce","acc","curr","some","node","id","push","index","findIndex","level","alert","error"],"sources":["/Users/akash/Desktop/untitled folder/my_component/frontend/src/Graphtry.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n  } from \"streamlit-component-lib\"\n\nclass Graphtry extends StreamlitComponentBase {\n    render() {\n\n        const jsonFileData = this.props.args[\"jsonFile\"];\n        var response = jsonFileData\n        console.log(response.response)\n        const getNodes = async () =>{\n            try {\n                if (response.flag == 1) {\n                  console.log(\"Nodes from flask :\", response);\n                  console.log(response.response)\n                  const _edges = response.data[\"response\"].map(edge=>{\n                    return({\n                      \"id\":`${edge[\"PARENT_ROLE\"]}_${edge[\"CHILD_ROLE\"]}`,\n                      \"source\":edge[\"PARENT_ROLE\"],\n                      \"target\":edge[\"CHILD_ROLE\"],\n                      \"label\":`${edge[\"PARENT_ROLE\"]}_${edge[\"CHILD_ROLE\"]}`\n                    })\n                  })\n      \n                //   dispatch(setEdges(_edges));\n                  // setEdges(_edges)\n                  const _nodes = response.data[\"response\"].map((edge) => {\n                      return {\"id\": edge[\"CHILD_ROLE\"], \"label\": edge[\"CHILD_ROLE\"], \"level\": edge[\"LEVEL\"]}\n                  })\n                  // loop through _nodes and check for duplicates and if there are duplicates keep the duplicate with the highest level\n                  const _nodes_unique = _nodes.reduce((acc, curr) => {\n                      if (!acc.some(node => node.id === curr.id)) {\n                          acc.push(curr);\n                      } else {\n                          const index = acc.findIndex(node => node.id === curr.id);\n                          if (acc[index].level < curr.level) {\n                              acc[index] = curr;\n                          }\n                      }\n                      return acc;\n                  }, []);\n                  console.log(_nodes)\n                  console.log(_nodes_unique)\n                //   dispatch(setNodes(_nodes_unique));\n                }\n                else {\n                  alert(\"Request failed for rbac_hierarchy\")\n                  console.log(response.data)\n                }\n            }\n            catch (error) {\n              console.log(error)\n              alert(\"error in rbac_hierarchy\")\n            }\n        }\n      \n\n\n        \n        return (\n            <div>\n            </div>\n        );\n    }\n}\n\nexport default withStreamlitConnection(Graphtry);"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,SADJ,EAEIC,sBAFJ,EAGIC,uBAHJ,QAIS,yBAJT;;AAMA,MAAMC,QAAN,SAAuBF,sBAAvB,CAA8C;EAC1CG,MAAM,GAAG;IAEL,MAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgB,UAAhB,CAArB;IACA,IAAIC,QAAQ,GAAGH,YAAf;IACAI,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACA,QAArB;;IACA,MAAMG,QAAQ,GAAG,YAAW;MACxB,IAAI;QACA,IAAIH,QAAQ,CAACI,IAAT,IAAiB,CAArB,EAAwB;UACtBH,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAlC;UACAC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACA,QAArB;;UACA,MAAMK,MAAM,GAAGL,QAAQ,CAACM,IAAT,CAAc,UAAd,EAA0BC,GAA1B,CAA8BC,IAAI,IAAE;YACjD,OAAO;cACL,MAAM,GAAEA,IAAI,CAAC,aAAD,CAAgB,IAAGA,IAAI,CAAC,YAAD,CAAe,EAD7C;cAEL,UAASA,IAAI,CAAC,aAAD,CAFR;cAGL,UAASA,IAAI,CAAC,YAAD,CAHR;cAIL,SAAS,GAAEA,IAAI,CAAC,aAAD,CAAgB,IAAGA,IAAI,CAAC,YAAD,CAAe;YAJhD,CAAP;UAMD,CAPc,CAAf,CAHsB,CAYxB;UACE;;;UACA,MAAMC,MAAM,GAAGT,QAAQ,CAACM,IAAT,CAAc,UAAd,EAA0BC,GAA1B,CAA+BC,IAAD,IAAU;YACnD,OAAO;cAAC,MAAMA,IAAI,CAAC,YAAD,CAAX;cAA2B,SAASA,IAAI,CAAC,YAAD,CAAxC;cAAwD,SAASA,IAAI,CAAC,OAAD;YAArE,CAAP;UACH,CAFc,CAAf,CAdsB,CAiBtB;;;UACA,MAAME,aAAa,GAAGD,MAAM,CAACE,MAAP,CAAc,CAACC,GAAD,EAAMC,IAAN,KAAe;YAC/C,IAAI,CAACD,GAAG,CAACE,IAAJ,CAASC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYH,IAAI,CAACG,EAAlC,CAAL,EAA4C;cACxCJ,GAAG,CAACK,IAAJ,CAASJ,IAAT;YACH,CAFD,MAEO;cACH,MAAMK,KAAK,GAAGN,GAAG,CAACO,SAAJ,CAAcJ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYH,IAAI,CAACG,EAAvC,CAAd;;cACA,IAAIJ,GAAG,CAACM,KAAD,CAAH,CAAWE,KAAX,GAAmBP,IAAI,CAACO,KAA5B,EAAmC;gBAC/BR,GAAG,CAACM,KAAD,CAAH,GAAaL,IAAb;cACH;YACJ;;YACD,OAAOD,GAAP;UACH,CAVqB,EAUnB,EAVmB,CAAtB;;UAWAX,OAAO,CAACC,GAAR,CAAYO,MAAZ;UACAR,OAAO,CAACC,GAAR,CAAYQ,aAAZ,EA9BsB,CA+BxB;QACC,CAhCD,MAiCK;UACHW,KAAK,CAAC,mCAAD,CAAL;UACApB,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACM,IAArB;QACD;MACJ,CAtCD,CAuCA,OAAOgB,KAAP,EAAc;QACZrB,OAAO,CAACC,GAAR,CAAYoB,KAAZ;QACAD,KAAK,CAAC,yBAAD,CAAL;MACD;IACJ,CA5CD;;IAiDA,oBACI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ;EAIH;;AA3DyC;;AA8D9C,eAAe3B,uBAAuB,CAACC,QAAD,CAAtC"},"metadata":{},"sourceType":"module"}