{"ast":null,"code":"var _jsxFileName = \"/Users/akash/Desktop/untitled folder/my_component/frontend/src/Graphtry.js\";\nimport React, { useEffect } from 'react';\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GraphSideBar from './components/GraphSideBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport GraphView from './components/GraphView';\n\nclass Graphtry extends StreamlitComponentBase {\n  render() {\n    const {\n      nodes,\n      edges,\n      isLoadingTree\n    } = useSelector(state => state.mainSlice);\n    const dispatch = useDispatch();\n    const jsonFileData = this.props.args[\"jsonFile\"];\n    var response = jsonFileData;\n    console.log(response.response);\n\n    const getNodes = async () => {\n      try {\n        if (response.flag == 1) {\n          console.log(\"Nodes from flask :\", response);\n          console.log(response.response);\n\n          const _edges = response.response.map(edge => {\n            return {\n              \"id\": `${edge[\"PARENT_ROLE\"]}_${edge[\"CHILD_ROLE\"]}`,\n              \"source\": edge[\"PARENT_ROLE\"],\n              \"target\": edge[\"CHILD_ROLE\"],\n              \"label\": `${edge[\"PARENT_ROLE\"]}_${edge[\"CHILD_ROLE\"]}`\n            };\n          }); // dispatch(setEdges(_edges));\n          // setEdges(_edges)\n\n\n          const _nodes = response.response.map(edge => {\n            return {\n              \"id\": edge[\"CHILD_ROLE\"],\n              \"label\": edge[\"CHILD_ROLE\"],\n              \"level\": edge[\"LEVEL\"]\n            };\n          }); // loop through _nodes and check for duplicates and if there are duplicates keep the duplicate with the highest level\n\n\n          const _nodes_unique = _nodes.reduce((acc, curr) => {\n            if (!acc.some(node => node.id === curr.id)) {\n              acc.push(curr);\n            } else {\n              const index = acc.findIndex(node => node.id === curr.id);\n\n              if (acc[index].level < curr.level) {\n                acc[index] = curr;\n              }\n            }\n\n            return acc;\n          }, []);\n\n          console.log(_nodes);\n          console.log(_nodes_unique); // dispatch(setNodes(_nodes_unique));\n        } else {\n          alert(\"Request failed for rbac_hierarchy\");\n          console.log(response.data);\n        }\n      } catch (error) {\n        console.log(error);\n        alert(\"error in rbac_hierarchy\");\n      }\n    };\n\n    const tabValue = \"rbac\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 0.2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GraphSideBar, {\n      getNodes: getNodes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nodes__div\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        // backgroundColor:\"whitesmoke\", \n        alignItems: \"center\",\n        width: \"100%\",\n        marginTop: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      textColor: \"secondary\",\n      indicatorColor: \"secondary\",\n      \"aria-label\": \"secondary tabs example\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      value: \"rbac\",\n      label: \"RBAC Hierarchy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nodes__div\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, tabValue == \"rbac\" && nodes && edges && /*#__PURE__*/React.createElement(GraphView, {\n      nodes: nodes,\n      edges: edges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 60\n      }\n    })))));\n  }\n\n}\n\nexport default withStreamlitConnection(Graphtry);","map":{"version":3,"names":["React","useEffect","Streamlit","StreamlitComponentBase","withStreamlitConnection","useDispatch","useSelector","GraphSideBar","Tabs","Tab","Box","GraphView","Graphtry","render","nodes","edges","isLoadingTree","state","mainSlice","dispatch","jsonFileData","props","args","response","console","log","getNodes","flag","_edges","map","edge","_nodes","_nodes_unique","reduce","acc","curr","some","node","id","push","index","findIndex","level","alert","data","error","tabValue","display","flex","justifyContent","flexDirection","alignItems","width","marginTop","margin"],"sources":["/Users/akash/Desktop/untitled folder/my_component/frontend/src/Graphtry.js"],"sourcesContent":["import React, { useEffect} from 'react';\nimport {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n  } from \"streamlit-component-lib\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GraphSideBar from './components/GraphSideBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport GraphView from './components/GraphView';\nclass Graphtry extends StreamlitComponentBase {\n    render() {\n        const { nodes,edges, isLoadingTree } = useSelector(state=>state.mainSlice);\n        const dispatch = useDispatch();\n\n\n\n        const jsonFileData = this.props.args[\"jsonFile\"];\n        var response = jsonFileData\n        console.log(response.response)\n        const getNodes = async () =>{\n            try {\n                if (response.flag == 1) {\n                  console.log(\"Nodes from flask :\", response);\n                  console.log(response.response)\n                  const _edges = response.response.map(edge=>{\n                    return({\n                      \"id\":`${edge[\"PARENT_ROLE\"]}_${edge[\"CHILD_ROLE\"]}`,\n                      \"source\":edge[\"PARENT_ROLE\"],\n                      \"target\":edge[\"CHILD_ROLE\"],\n                      \"label\":`${edge[\"PARENT_ROLE\"]}_${edge[\"CHILD_ROLE\"]}`\n                    })\n                  })\n      \n                  // dispatch(setEdges(_edges));\n                  // setEdges(_edges)\n                  const _nodes = response.response.map((edge) => {\n                      return {\"id\": edge[\"CHILD_ROLE\"], \"label\": edge[\"CHILD_ROLE\"], \"level\": edge[\"LEVEL\"]}\n                  })\n                  // loop through _nodes and check for duplicates and if there are duplicates keep the duplicate with the highest level\n                  const _nodes_unique = _nodes.reduce((acc, curr) => {\n                      if (!acc.some(node => node.id === curr.id)) {\n                          acc.push(curr);\n                      } else {\n                          const index = acc.findIndex(node => node.id === curr.id);\n                          if (acc[index].level < curr.level) {\n                              acc[index] = curr;\n                          }\n                      }\n                      return acc;\n                  }, []);\n                  console.log(_nodes)\n                  console.log(_nodes_unique)\n                  // dispatch(setNodes(_nodes_unique));\n                }\n                else {\n                  alert(\"Request failed for rbac_hierarchy\")\n                  console.log(response.data)\n                }\n            }\n            catch (error) {\n              console.log(error)\n              alert(\"error in rbac_hierarchy\")\n            }\n        }\n\n        const tabValue = \"rbac\";\n        \n        return (\n            <div>\n              <div style={{display:\"flex\" }}>\n                <div style={{flex: 0.2}}>\n                    <GraphSideBar getNodes={getNodes} />\n                </div>\n                <div className=\"nodes__div\" style={{display: \"flex\", justifyContent: \"center\", flexDirection:\"column\",\n                    // backgroundColor:\"whitesmoke\", \n                    alignItems:\"center\", width: \"100%\", marginTop:\"100px\"}}>\n                  <Box sx={{ width: '100%' }}>\n                    <Tabs\n                      textColor=\"secondary\"\n                      indicatorColor=\"secondary\"\n                      aria-label=\"secondary tabs example\"\n                      centered\n                    >\n                      <Tab value=\"rbac\" label=\"RBAC Hierarchy\" />\n                    </Tabs>\n                  </Box>\n                  {/* <div>\n                    <Button onClick={generatePDF} variant=\"contained\">Download</Button>\n                  </div> */}\n                  <div className=\"nodes__div\" style={{display: \"flex\", justifyContent: \"center\",alignItems:\"center\", margin:\"auto\"}}>\n                    {tabValue==\"rbac\" && nodes && edges && <GraphView  nodes={nodes} edges={edges} />}   \n              \n                  </div>\n                </div>\n              </div>\n\n            </div>\n        );\n    }\n}\n\nexport default withStreamlitConnection(Graphtry);"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SACIC,SADJ,EAEIC,sBAFJ,EAGIC,uBAHJ,QAIS,yBAJT;AAKA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AACA,MAAMC,QAAN,SAAuBT,sBAAvB,CAA8C;EAC1CU,MAAM,GAAG;IACL,MAAM;MAAEC,KAAF;MAAQC,KAAR;MAAeC;IAAf,IAAiCV,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,SAAd,CAAlD;IACA,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;IAIA,MAAMe,YAAY,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgB,UAAhB,CAArB;IACA,IAAIC,QAAQ,GAAGH,YAAf;IACAI,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACA,QAArB;;IACA,MAAMG,QAAQ,GAAG,YAAW;MACxB,IAAI;QACA,IAAIH,QAAQ,CAACI,IAAT,IAAiB,CAArB,EAAwB;UACtBH,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAlC;UACAC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACA,QAArB;;UACA,MAAMK,MAAM,GAAGL,QAAQ,CAACA,QAAT,CAAkBM,GAAlB,CAAsBC,IAAI,IAAE;YACzC,OAAO;cACL,MAAM,GAAEA,IAAI,CAAC,aAAD,CAAgB,IAAGA,IAAI,CAAC,YAAD,CAAe,EAD7C;cAEL,UAASA,IAAI,CAAC,aAAD,CAFR;cAGL,UAASA,IAAI,CAAC,YAAD,CAHR;cAIL,SAAS,GAAEA,IAAI,CAAC,aAAD,CAAgB,IAAGA,IAAI,CAAC,YAAD,CAAe;YAJhD,CAAP;UAMD,CAPc,CAAf,CAHsB,CAYtB;UACA;;;UACA,MAAMC,MAAM,GAAGR,QAAQ,CAACA,QAAT,CAAkBM,GAAlB,CAAuBC,IAAD,IAAU;YAC3C,OAAO;cAAC,MAAMA,IAAI,CAAC,YAAD,CAAX;cAA2B,SAASA,IAAI,CAAC,YAAD,CAAxC;cAAwD,SAASA,IAAI,CAAC,OAAD;YAArE,CAAP;UACH,CAFc,CAAf,CAdsB,CAiBtB;;;UACA,MAAME,aAAa,GAAGD,MAAM,CAACE,MAAP,CAAc,CAACC,GAAD,EAAMC,IAAN,KAAe;YAC/C,IAAI,CAACD,GAAG,CAACE,IAAJ,CAASC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYH,IAAI,CAACG,EAAlC,CAAL,EAA4C;cACxCJ,GAAG,CAACK,IAAJ,CAASJ,IAAT;YACH,CAFD,MAEO;cACH,MAAMK,KAAK,GAAGN,GAAG,CAACO,SAAJ,CAAcJ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYH,IAAI,CAACG,EAAvC,CAAd;;cACA,IAAIJ,GAAG,CAACM,KAAD,CAAH,CAAWE,KAAX,GAAmBP,IAAI,CAACO,KAA5B,EAAmC;gBAC/BR,GAAG,CAACM,KAAD,CAAH,GAAaL,IAAb;cACH;YACJ;;YACD,OAAOD,GAAP;UACH,CAVqB,EAUnB,EAVmB,CAAtB;;UAWAV,OAAO,CAACC,GAAR,CAAYM,MAAZ;UACAP,OAAO,CAACC,GAAR,CAAYO,aAAZ,EA9BsB,CA+BtB;QACD,CAhCD,MAiCK;UACHW,KAAK,CAAC,mCAAD,CAAL;UACAnB,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACqB,IAArB;QACD;MACJ,CAtCD,CAuCA,OAAOC,KAAP,EAAc;QACZrB,OAAO,CAACC,GAAR,CAAYoB,KAAZ;QACAF,KAAK,CAAC,yBAAD,CAAL;MACD;IACJ,CA5CD;;IA8CA,MAAMG,QAAQ,GAAG,MAAjB;IAEA,oBACI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,KAAK,EAAE;QAACC,OAAO,EAAC;MAAT,CAAZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,KAAK,EAAE;QAACC,IAAI,EAAE;MAAP,CAAZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,YAAD;MAAc,QAAQ,EAAEtB,QAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,CADF,eAIE;MAAK,SAAS,EAAC,YAAf;MAA4B,KAAK,EAAE;QAACqB,OAAO,EAAE,MAAV;QAAkBE,cAAc,EAAE,QAAlC;QAA4CC,aAAa,EAAC,QAA1D;QAC/B;QACAC,UAAU,EAAC,QAFoB;QAEVC,KAAK,EAAE,MAFG;QAEKC,SAAS,EAAC;MAFf,CAAnC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAGE,oBAAC,GAAD;MAAK,EAAE,EAAE;QAAED,KAAK,EAAE;MAAT,CAAT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MACE,SAAS,EAAC,WADZ;MAEE,cAAc,EAAC,WAFjB;MAGE,cAAW,wBAHb;MAIE,QAAQ,MAJV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAME,oBAAC,GAAD;MAAK,KAAK,EAAC,MAAX;MAAkB,KAAK,EAAC,gBAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EANF,CADF,CAHF,eAgBE;MAAK,SAAS,EAAC,YAAf;MAA4B,KAAK,EAAE;QAACL,OAAO,EAAE,MAAV;QAAkBE,cAAc,EAAE,QAAlC;QAA2CE,UAAU,EAAC,QAAtD;QAAgEG,MAAM,EAAC;MAAvE,CAAnC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGR,QAAQ,IAAE,MAAV,IAAoBhC,KAApB,IAA6BC,KAA7B,iBAAsC,oBAAC,SAAD;MAAY,KAAK,EAAED,KAAnB;MAA0B,KAAK,EAAEC,KAAjC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADzC,CAhBF,CAJF,CADF,CADJ;EA+BH;;AAzFyC;;AA4F9C,eAAeX,uBAAuB,CAACQ,QAAD,CAAtC"},"metadata":{},"sourceType":"module"}